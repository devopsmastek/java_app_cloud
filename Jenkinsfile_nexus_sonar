node 
{   

                 
   def mvnHome
   stage('scm checkout') { 
      
      git 'https://github.com/devopsmastek/java_app_cloud.git'
                
      
   }
   stage('Build') {
     def MVN_HOME = tool name: 'MAVEN', type: 'maven'
     def MVNCMD = "${MVN_HOME}/bin/mvn"
     sh "${MVNCMD} clean package  "
      
      }

   stage('SonarQube Analysis') {
        def MVN_HOME =  tool name: 'MAVEN', type: 'maven'
        withSonarQubeEnv('SonarNexus') { 
          sh "${MVN_HOME}/bin/mvn sonar:sonar"
        }
    }
      
      
      stage("Quality Gate Status Check"){
          timeout(time: 1, unit: 'HOURS') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                 
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }
          }
      }    
      
      stage("publish to nexus") {
            
	 
	    
	    pom = readMavenPom file: "pom.xml";
                    // Find built artifact under target folder
                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
                    // Print some info from the artifact found
                    echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                    // Extract the path from the File found
                    artifactPath = filesByGlob[0].path;
                    // Assign to a boolean response verifying If the artifact name exists
                    artifactExists = fileExists artifactPath;
		    BUILT_ID = "${env.BUILD_NUMBER}"
    nexusArtifactUploader artifacts:
				[[artifactId: pom.artifactId ,
				classifier: '', 
				file: artifactPath, 
				type: pom.packaging]],
				credentialsId: 'nexus', 
				groupId: pom.groupId,
				nexusUrl: '13.127.210.139:9999/nexus', 
				nexusVersion: 'nexus2',
				protocol: 'http', 
				repository: 'java_app',
				version: "${pom.version}.'${BUILT_ID}'"
        }
      
     
   
   stage ('deploy')
          {
          
    def source = "/var/lib/jenkins/workspace/java_app_cloud_sonar/target/*.war}"
    def  destination = "/var/lib/tomcat8/webapps/"
    sh "cp -r /var/lib/jenkins/workspace/java_app_cloud_sonar/target/*.war ${destination} "
      
        }
}
